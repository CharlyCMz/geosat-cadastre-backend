# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Construction {
  id: Int!
  area: Float!
  floors: Int!
  type: String!
  address: String!
  land: Land!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Land {
  id: Int!
  area: Float!
  comercialValue: Float!
  waterBodies: Boolean!
  landType: String!
  constructions: [Construction!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Property {
  id: Float!
  predialNumber: Int!
  appraise: Float!
  name: String!
  state: String!
  municipality: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type NaturalPerson {
  id: Int!
  address: String!
  eMail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  documentType: String!
  documentNumber: Int!
  name: String!
  lastName: String!
}

type LegalPerson {
  id: Int!
  address: String!
  eMail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  nit: Int!
  businessName: String!
}

type Query {
  findAllProperties: [Property!]!
  findPropertyById(id: Int!): Property!
  findAllLands: [Land!]!
  findLandById(id: Int!): Land!
  findAllConstructions: [Construction!]!
  findConstructionById(id: Int!): Construction!
  findAllNaturalPerson: [NaturalPerson!]!
  findNaturalPersonById(id: Int!): NaturalPerson!
  findAllLegalPerson: [LegalPerson!]!
  findLegalPersonById(id: Int!): LegalPerson!
}

type Mutation {
  createProperty(propertyInput: CreatePropertyDTO!): Property!
  updateProperty(id: Float!, propertyInput: UpdatePropertyDTO!): Property!
  deleteProperty(id: Float!): Property!
  createLand(landInput: CreateLandDTO!): Land!
  updateLand(id: Float!, landInput: UpdateLandDTO!): Land!
  deleteLand(id: Float!): Land!
  createConstruction(constructionInput: CreateConstructionDTO!): Construction!
  updateConstruction(id: Float!, constructionInput: UpdateConstructionDTO!): Construction!
  deleteConstruction(id: Float!): Construction!
  createNaturalPerson(ownerInput: CreateNaturalPersonDTO!): NaturalPerson!
  updateNaturalPerson(id: Float!, ownerInput: UpdateNaturalPersonDTO!): NaturalPerson!
  deleteNaturalPerson(id: Float!): NaturalPerson!
  createLegalPerson(ownerInput: CreateLegalPersonDTO!): LegalPerson!
  updateLegalPerson(id: Float!, ownerInput: UpdateLegalPersonDTO!): LegalPerson!
  deleteLegalPerson(id: Float!): LegalPerson!
}

input CreatePropertyDTO {
  predialNumber: Int!
  appraise: Int!
  name: String!
  state: String!
  municipality: String!
  landId: Float!
  ownerType: String!
  ownerIds: [ID!]!
}

input UpdatePropertyDTO {
  predialNumber: Int
  appraise: Int
  name: String
  state: String
  municipality: String
  landId: Float
  ownerType: String
  ownerIds: [ID!]
}

input CreateLandDTO {
  area: Float!
  comercialValue: Int!
  waterBodies: Boolean!
  landType: String!
  constructionIds: [ID!]
}

input UpdateLandDTO {
  area: Float
  comercialValue: Int
  waterBodies: Boolean
  landType: String
  constructionIds: [ID!]
}

input CreateConstructionDTO {
  area: Float!
  floors: Int!
  type: String!
  address: String!
  landId: Float!
}

input UpdateConstructionDTO {
  area: Float
  floors: Int
  type: String
  address: String
  landId: Float
}

input CreateNaturalPersonDTO {
  address: String!
  eMail: String!
  documentType: String!
  documentNumber: Int!
  name: String!
  lastName: String!
}

input UpdateNaturalPersonDTO {
  address: String
  eMail: String
  documentType: String
  documentNumber: Int
  name: String
  lastName: String
}

input CreateLegalPersonDTO {
  address: String!
  eMail: String!
  nit: Int!
  businessName: String!
}

input UpdateLegalPersonDTO {
  address: String
  eMail: String
  nit: Int
  businessName: String
}